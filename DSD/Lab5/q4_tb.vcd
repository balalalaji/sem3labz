$date
	Thu Oct  6 09:34:27 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q4_tb $end
$var wire 1 ! lesser $end
$var wire 1 " greater $end
$var wire 1 # equal $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module qu $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 # equal $end
$var wire 1 " greater $end
$var wire 1 ! lesser $end
$var wire 1 ( l2 $end
$var wire 1 ) l1 $end
$var wire 1 * g2 $end
$var wire 1 + g1 $end
$var wire 1 , e2 $end
$var wire 1 - e1 $end
$scope module stage1 $end
$var wire 1 . a1 $end
$var wire 1 / a2 $end
$var wire 1 0 b1 $end
$var wire 1 1 b2 $end
$var wire 1 - equal $end
$var wire 1 + greater $end
$var wire 1 ) lesser $end
$upscope $end
$scope module stage2 $end
$var wire 1 2 a1 $end
$var wire 1 3 a2 $end
$var wire 1 4 b1 $end
$var wire 1 5 b2 $end
$var wire 1 , equal $end
$var wire 1 * greater $end
$var wire 1 ( lesser $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
05
04
03
02
11
00
1/
0.
1-
1,
0+
0*
0)
0(
b1000 '
b1000 &
b1000 %
b1000 $
1#
0"
0!
$end
#20
0!
1"
1+
0#
0-
0,
1*
14
1.
13
12
b1001 %
b1001 '
b1111 $
b1111 &
#40
0"
0*
1#
0+
1,
1-
15
04
0.
02
b1010 %
b1010 '
b1010 $
b1010 &
#60
